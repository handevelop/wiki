SimpleDateFormat


#SimpleDateFormat 은 DateFormat 을 상속받아서 사용자들에게 더 다양하게 표현해줄 때 사용한다.
ex)
SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
System.out.println(sdf.format(now));
==> 20190328
SimpleDateFormat sdf = new SimpleDateFormat("E MMM dd HH:mm:ss", Locale.UK);
System.out.println(sdf.format(now));
==> Thu March 28 18:00:29

#오라클과 SimpleDateFormat
오라클에서는 날짜를 입력받을 때 String 으로 받으면 오류를 뱉는다.
따라서 SimpleDateFormat 을 이용해 Date 형식으로 변환 해야 한다.

#parse 메소드
public Date parse(String text, ParsePosition pos)
String을 Date 형식으로 파싱해주는 메소드.
이 메소드는 지정된 pos 부터 text 를 파싱한다.

*이 메소드를 사용할 때 주의할 사항이 있다.
text와 SimpleDateFormat 객체의 꼴이 다를 경우에 ParseException 이 발생한다.
따라서 미리 포맷과 text 를 맞추어야 하며 parse 메소드는 try-catch 문으로 예외처리를 시켜줘서
WAS Exception 을 방지해야 한다.

ex)
String date="20150101";
SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
format.parse(date)

결과 : java.text.ParseException: Unparseable date: "20150101"

해결 : 
String date="20150101";
SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
try {
  System.out.println(format.parse(date));
} catch (Exception ex) {
}

